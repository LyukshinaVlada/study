---
## Author
author:
<<<<<<< HEAD
  name: Люкшина Влада Алексеевна
  email: 112243022@pfur.ru
=======
  name: Дмитрий Сергеевич Кулябов
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: kulyabov-ds@rudn.ru
>>>>>>> d773cadb183152f3bef78b6090e9b3fb2507a53a
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
<<<<<<< HEAD
title: Лабораторная работа №4
subtitle: Работа с программными пакетами
=======
title: Структура научной презентации
subtitle: Простейший вариант
license: CC BY
>>>>>>> d773cadb183152f3bef78b6090e9b3fb2507a53a
date: today
date-format: "YYYY-MM-DD" # Example: 2025-09-06
---

<<<<<<< HEAD

## Цель работы

- Получить навыки работы с репозиториями и менеджерами пакетов.  


## Задание

- Изучите, как и в каких файлах подключаются репозитории для установки программного обеспечения; изучите основные возможности (поиск, установка, обновление,
удаление пакета, работа с историей действий) команды dnf. Изучите и повторите процесс установки/удаления определённого пакета с использованием возможностей dnf. Изучите и повторите процесс установки/удаления определённого пакета с использованием возможностей rpm.  

## Выполнение лабораторной работы
## Выполнение
- В консоли переходим в режим работы суперпользователя, после чего переходим в каталог /etc/yum.repos.d и изучаем содержание каталога и файлов репозиториев.  
![Изучаем](image/1.png)!

## Выполнение
- Изучаем информацию о репозитории rocky.addons.  
![Репозиторий](image/2.png)!

## Выполнение
- Информация о репозитории:  
![Информация](image/3.png)!

## Выполнение
- Выведем на экран список репозиториев. Видим наши репозитории и папки к которым они принадлежат.  
![Список](image/4.png)!

## Выполнение
- Выведем на экран список пакетов, в названии или описании которых есть слово user.  
![Вывод](image/5.png)!

## Выполнение
- Установим nmap, предварительно изучив информацию по имеющимся пакетам. Сначала найдем nmap с помощью команды search.  
![Поиск](image/6.png)!

## Выполнение
- Посмотрим информацию о npm с помощью команды dnf info.  
![Информация](image/7.png)!

## Выполнение
- Установим nmap.  
![Установка](image/8.png)!

## Выполнение
- Используем ту же команду, но в конце добавим \*. Разница команд в том, что без \* мы устанавливаем определенный npm, а с \* мы установим все пакеты, в описании которых есть "npm".  
![Установка](image/9.png)!

## Выполнение
- Удалим nmap.  
![Удаление](image/10.png)!

## Выполнение
- Используем ту же команду, но в конце добавим \*. Разница команд в том, что без \* мы удаляем определенный npm, а с \* мы удалим все пакеты, в описании которых есть "npm".  
![Удаляем](image/11.png)!

## Выполнение
- Выведем на экран список имеющихся групп пакетов.  
![Список пакетов](image/12.png)!

## Выполнение
- Вывод списка на другом языке.  
![Вывод списка](image/13.png)!

## Выполнение
- Выведем информацию о пакетах.  
![Информация](image/14.png)!

## Выполнение
- Установим эти пакеты.  
![Установка](image/15.png)!

## Выполнение
- Удалим только что установленные пакеты.  
![Удаление](image/16.png)!

## Выполнение
- Посмотрим историю использования команды dnf.  
![История](image/17.png)!

## Выполнение
- Отменим последнее (шестое по счёту) действие. Мы удаляли пакет, соответсвенно отмена действия привела к повторной установке удаленного пакета.  
![Отмена](image/18.png)!

## Выполнение
- Скачайте rpm-пакет lynx. Сначала выведем список доступных пакетов. Установим пакет.  
![Установка](image/19.png)!

## Выполнение
- Найдем каталог, в который был помещён пакет после загрузки и перейдем в него.  
![Каталог](image/20.png)!

## Выполнение
- Установим rpm-пакет и определим расположение исполняемого файла. Используя rpm, определим по имени файла, к какому пакету принадлежит lynx.  
![Установка](image/21.png)!

## Выполнение
- Получим дополнительную информацию о содержимом пакета.  
![Информация](image/22.png)!

## Выполнение
- Получим список всех файлов в пакете и выведем перечень файлов с документацией пакета.  
![Список](image/23.png)!

## Выполнение
- Посмотрим файлы документации, применив команду man.  
![Документация](image/24.png)!

## Выполнение
- Выведем на экран перечень и месторасположение конфигурационных файлов пакета.  
![Файлы](image/25.png)!

## Выполнение
- Выведем на экран расположение и содержание скриптов, выполняемых при установке пакета. Как мы видим, скриптов нет.  
![Скрипты](image/26.png)!

## Выполнение
- В отдельном терминале под своей учётной записью запустим текстовый браузер lynx, чтобы проверить корректность установки пакета.  
![Браузер](image/27.png)!

## Выполнение
- Вернемся в терминал с учётной записью root и удалим пакет. Проверим командой ls.  
![Удаление](image/28.png)!

## Выполнение
- Предположим, что требуется из rpm-пакетов установить dnsmasq (DNS-, DHCP- и TFTP- сервер). Выведем список. Установим пакет dnsmasq.  
![Список](image/29.png)!

## Выполнение
- Определим расположение исполняемого файла. Определим по имени файла, к какому пакету принадлежит dnsmasq и получим дополнительную информацию о содержимом пакета.  
![Информация](image/30.png)!

## Выполнение
- Получим список всех файлов в пакете.  
![Список](image/31.png)!

## Выполнение
- Выведем перечень файлов с документацией пакета.  
![Перечень](image/32.png)!

## Выполнение
- Посмотрим файлы документации, применив команду man dnsmasq.  
![Команда man](image/33.png)!

## Выполнение
- Выведем на экран перечень и месторасположение конфигурационных файлов пакета.  
![Файлы](image/34.png)!

## Выполнение
- Выведем на экран расположение и содержание скриптов, выполняемых при установке пакета.  
![Скрипты](image/35.png)!

## Выполнение
- Вернемся в терминал с учётной записью root и удалим пакет.  
![Удаление](image/36.png)!



## Выводы

- В лабораторной работе №4 мы поработали с программными пакетами, рассмотрели скрипты и репозитории.  
=======
# Информация

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

  * Кулябов Дмитрий Сергеевич
  * д.ф.-м.н., профессор
  * профессор кафедры теории вероятностей и кибербезопасности
  * Российский университет дружбы народов им. П. Лумумбы
  * [kulyabov-ds@rudn.ru](mailto:kulyabov-ds@rudn.ru)
  * <https://yamadharma.github.io/ru/>

:::
::: {.column width="30%"}

![](./image/kulyabov.jpg)

:::
::::::::::::::

# Вводная часть

## Актуальность

- Важно донести результаты своих исследований до окружающих
- Научная презентация --- рабочий инструмент исследователя
- Необходимо создавать презентацию быстро
- Желательна минимизация усилий для создания презентации

## Объект и предмет исследования

- Презентация как текст
- Программное обеспечение для создания презентаций
- Входные и выходные форматы презентаций

## Цели и задачи

- Создать шаблон презентации в Markdown
- Описать алгоритм создания выходных форматов презентаций

## Материалы и методы

- Процессор `pandoc` для входного формата Markdown
- Результирующие форматы
	- `pdf`
	- `html`
- Автоматизация процесса создания: `Makefile`

# Создание презентации

## Процессор `pandoc`

- Pandoc: преобразователь текстовых файлов
- Сайт: <https://pandoc.org/>
- Репозиторий: <https://github.com/jgm/pandoc>

## Формат `pdf`

- Использование LaTeX
- Пакет для презентации: [beamer](https://ctan.org/pkg/beamer)
- Тема оформления: `metropolis`

## Код для формата `pdf`

```yaml
slide_level: 2
aspectratio: 169
section-titles: true
theme: metropolis
```

## Формат `html`

- Используется фреймворк [reveal.js](https://revealjs.com/)
- Используется [тема](https://revealjs.com/themes/) `beige`

## Код для формата `html`

- Тема задаётся в файле `Makefile`

```make
REVEALJS_THEME = beige
```
# Результаты

## Получающиеся форматы

- Полученный `pdf`-файл можно демонстрировать в любой программе просмотра `pdf`
- Полученный `html`-файл содержит в себе все ресурсы: изображения, css, скрипты

# Элементы презентации

## Актуальность

- Даёт понять, о чём пойдёт речь
- Следует широко и кратко описать проблему
- Мотивировать свое исследование
- Сформулировать цели и задачи
- Возможна формулировка ожидаемых результатов

## Цели и задачи

- Не формулируйте более 1--2 целей исследования

## Материалы и методы

- Представляйте данные качественно
- Количественно, только если крайне необходимо
- Излишние детали не нужны

## Содержание исследования

- Предлагаемое решение задач исследования с обоснованием
- Основные этапы работы

## Результаты

- Не нужны все результаты
- Необходимы логические связки между слайдами
- Необходимо показать понимание материала


## Итоговый слайд

- Запоминается последняя фраза. © Штирлиц
- Главное сообщение, которое вы хотите донести до слушателей
- Избегайте использовать последний слайд вида *Спасибо за внимание*

# Рекомендую

## Принцип 10/20/30

  - 10 слайдов
  - 20 минут на доклад
  - 30 кегль шрифта

## Связь слайдов

::: incremental

- Один слайд --- одна мысль
- Нельзя ссылаться на объекты, находящиеся на предыдущих слайдах (например, на формулы)
- Каждый слайд должен иметь заголовок

:::

## Количество сущностей

::: incremental

- Человек может одновременно помнить $7 \pm 2$ элемента
- При размещении информации на слайде старайтесь чтобы в сумме слайд содержал не более 5 элементов
- Можно группировать элементы так, чтобы визуально было не более 5 групп

:::

## Общие рекомендации

::: incremental

- На слайд выносится та информация, которая без зрительной опоры воспринимается хуже
- Слайды должны дополнять или обобщать содержание выступления или его частей, а не дублировать его
- Информация на слайдах должна быть изложена кратко, чётко и хорошо структурирована
- Слайд не должен быть перегружен графическими изображениями и текстом
- Не злоупотребляйте анимацией и переходами

:::

## Представление данных

::: incremental

- Лучше представить в виде схемы
- Менее оптимально представить в виде рисунка, графика, таблицы
- Текст используется, если все предыдущие способы отображения информации не подошли

:::
>>>>>>> d773cadb183152f3bef78b6090e9b3fb2507a53a
